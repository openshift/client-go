// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	insightsv1alpha1 "github.com/openshift/api/insights/v1alpha1"
)

// DataGatherSpecApplyConfiguration represents a declarative configuration of the DataGatherSpec type for use
// with apply.
type DataGatherSpecApplyConfiguration struct {
	DataPolicy *insightsv1alpha1.DataPolicy       `json:"dataPolicy,omitempty"`
	Gatherers  []GathererConfigApplyConfiguration `json:"gatherers,omitempty"`
}

// DataGatherSpecApplyConfiguration constructs a declarative configuration of the DataGatherSpec type for use with
// apply.
func DataGatherSpec() *DataGatherSpecApplyConfiguration {
	return &DataGatherSpecApplyConfiguration{}
}

// WithDataPolicy sets the DataPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DataPolicy field is set to the value of the last call.
func (b *DataGatherSpecApplyConfiguration) WithDataPolicy(value insightsv1alpha1.DataPolicy) *DataGatherSpecApplyConfiguration {
	b.DataPolicy = &value
	return b
}

// WithGatherers adds the given value to the Gatherers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Gatherers field.
func (b *DataGatherSpecApplyConfiguration) WithGatherers(values ...*GathererConfigApplyConfiguration) *DataGatherSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithGatherers")
		}
		b.Gatherers = append(b.Gatherers, *values[i])
	}
	return b
}
