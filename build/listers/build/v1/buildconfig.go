// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/build/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// BuildConfigLister helps list BuildConfigs.
// All objects returned here must be treated as read-only.
type BuildConfigLister interface {
	// List lists all BuildConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.BuildConfig, err error)
	// BuildConfigs returns an object that can list and get BuildConfigs.
	BuildConfigs(namespace string) BuildConfigNamespaceLister
	BuildConfigListerExpansion
}

// buildConfigLister implements the BuildConfigLister interface.
type buildConfigLister struct {
	listers.ResourceIndexer[*v1.BuildConfig]
}

// NewBuildConfigLister returns a new BuildConfigLister.
func NewBuildConfigLister(indexer cache.Indexer) BuildConfigLister {
	return &buildConfigLister{listers.New[*v1.BuildConfig](indexer, v1.Resource("buildconfig"))}
}

// BuildConfigs returns an object that can list and get BuildConfigs.
func (s *buildConfigLister) BuildConfigs(namespace string) BuildConfigNamespaceLister {
	return buildConfigNamespaceLister{listers.NewNamespaced[*v1.BuildConfig](s.ResourceIndexer, namespace)}
}

// BuildConfigNamespaceLister helps list and get BuildConfigs.
// All objects returned here must be treated as read-only.
type BuildConfigNamespaceLister interface {
	// List lists all BuildConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.BuildConfig, err error)
	// Get retrieves the BuildConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.BuildConfig, error)
	BuildConfigNamespaceListerExpansion
}

// buildConfigNamespaceLister implements the BuildConfigNamespaceLister
// interface.
type buildConfigNamespaceLister struct {
	listers.ResourceIndexer[*v1.BuildConfig]
}
