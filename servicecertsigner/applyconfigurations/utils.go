// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfigurations

import (
	v1alpha1 "github.com/openshift/api/servicecertsigner/v1alpha1"
	internal "github.com/openshift/client-go/servicecertsigner/applyconfigurations/internal"
	servicecertsignerv1alpha1 "github.com/openshift/client-go/servicecertsigner/applyconfigurations/servicecertsigner/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=servicecertsigner.config.openshift.io, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("ServiceCertSignerOperatorConfig"):
		return &servicecertsignerv1alpha1.ServiceCertSignerOperatorConfigApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ServiceCertSignerOperatorConfigSpec"):
		return &servicecertsignerv1alpha1.ServiceCertSignerOperatorConfigSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ServiceCertSignerOperatorConfigStatus"):
		return &servicecertsignerv1alpha1.ServiceCertSignerOperatorConfigStatusApplyConfiguration{}

	}
	return nil
}

func NewTypeConverter(scheme *runtime.Scheme) *testing.TypeConverter {
	return &testing.TypeConverter{Scheme: scheme, TypeResolver: internal.Parser()}
}
