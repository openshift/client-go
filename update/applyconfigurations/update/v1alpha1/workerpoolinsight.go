// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// WorkerPoolInsightApplyConfiguration represents a declarative configuration of the WorkerPoolInsight type for use
// with apply.
type WorkerPoolInsightApplyConfiguration struct {
	UID        *string                                   `json:"uid,omitempty"`
	AcquiredAt *v1.Time                                  `json:"acquiredAt,omitempty"`
	Insight    *WorkerPoolInsightUnionApplyConfiguration `json:"insight,omitempty"`
}

// WorkerPoolInsightApplyConfiguration constructs a declarative configuration of the WorkerPoolInsight type for use with
// apply.
func WorkerPoolInsight() *WorkerPoolInsightApplyConfiguration {
	return &WorkerPoolInsightApplyConfiguration{}
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithUID(value string) *WorkerPoolInsightApplyConfiguration {
	b.UID = &value
	return b
}

// WithAcquiredAt sets the AcquiredAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AcquiredAt field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithAcquiredAt(value v1.Time) *WorkerPoolInsightApplyConfiguration {
	b.AcquiredAt = &value
	return b
}

// WithInsight sets the Insight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Insight field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithInsight(value *WorkerPoolInsightUnionApplyConfiguration) *WorkerPoolInsightApplyConfiguration {
	b.Insight = value
	return b
}
