// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/api/update/v1alpha1"
	updatev1alpha1 "github.com/openshift/client-go/update/applyconfigurations/update/v1alpha1"
	typedupdatev1alpha1 "github.com/openshift/client-go/update/clientset/versioned/typed/update/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeUpdateStatuses implements UpdateStatusInterface
type fakeUpdateStatuses struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.UpdateStatus, *v1alpha1.UpdateStatusList, *updatev1alpha1.UpdateStatusApplyConfiguration]
	Fake *FakeUpdateV1alpha1
}

func newFakeUpdateStatuses(fake *FakeUpdateV1alpha1) typedupdatev1alpha1.UpdateStatusInterface {
	return &fakeUpdateStatuses{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.UpdateStatus, *v1alpha1.UpdateStatusList, *updatev1alpha1.UpdateStatusApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("updatestatuses"),
			v1alpha1.SchemeGroupVersion.WithKind("UpdateStatus"),
			func() *v1alpha1.UpdateStatus { return &v1alpha1.UpdateStatus{} },
			func() *v1alpha1.UpdateStatusList { return &v1alpha1.UpdateStatusList{} },
			func(dst, src *v1alpha1.UpdateStatusList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.UpdateStatusList) []*v1alpha1.UpdateStatus {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.UpdateStatusList, items []*v1alpha1.UpdateStatus) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
