// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "github.com/openshift/api/config/v1"
)

// ConnectionConfigApplyConfiguration represents a declarative configuration of the ConnectionConfig type for use
// with apply.
type ConnectionConfigApplyConfiguration struct {
	URL             *string                    `json:"url,omitempty"`
	CA              *v1.ConfigMapNameReference `json:"ca,omitempty"`
	TLSClientConfig *v1.SecretNameReference    `json:"tlsClientConfig,omitempty"`
}

// ConnectionConfigApplyConfiguration constructs a declarative configuration of the ConnectionConfig type for use with
// apply.
func ConnectionConfig() *ConnectionConfigApplyConfiguration {
	return &ConnectionConfigApplyConfiguration{}
}

// WithURL sets the URL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URL field is set to the value of the last call.
func (b *ConnectionConfigApplyConfiguration) WithURL(value string) *ConnectionConfigApplyConfiguration {
	b.URL = &value
	return b
}

// WithCA sets the CA field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CA field is set to the value of the last call.
func (b *ConnectionConfigApplyConfiguration) WithCA(value v1.ConfigMapNameReference) *ConnectionConfigApplyConfiguration {
	b.CA = &value
	return b
}

// WithTLSClientConfig sets the TLSClientConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TLSClientConfig field is set to the value of the last call.
func (b *ConnectionConfigApplyConfiguration) WithTLSClientConfig(value v1.SecretNameReference) *ConnectionConfigApplyConfiguration {
	b.TLSClientConfig = &value
	return b
}
