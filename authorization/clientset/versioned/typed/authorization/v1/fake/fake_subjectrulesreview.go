// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1 "github.com/openshift/api/authorization/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	testing "k8s.io/client-go/testing"
)

// FakeSubjectRulesReviews implements SubjectRulesReviewInterface
type FakeSubjectRulesReviews struct {
	Fake *FakeAuthorizationV1
	ns   string
}

var subjectrulesreviewsResource = v1.SchemeGroupVersion.WithResource("subjectrulesreviews")

var subjectrulesreviewsKind = v1.SchemeGroupVersion.WithKind("SubjectRulesReview")

// Create takes the representation of a subjectRulesReview and creates it.  Returns the server's representation of the subjectRulesReview, and an error, if there is any.
func (c *FakeSubjectRulesReviews) Create(ctx context.Context, subjectRulesReview *v1.SubjectRulesReview, opts metav1.CreateOptions) (result *v1.SubjectRulesReview, err error) {
	emptyResult := &v1.SubjectRulesReview{}
	obj, err := c.Fake.
		Invokes(testing.NewCreateActionWithOptions(subjectrulesreviewsResource, c.ns, subjectRulesReview, opts), emptyResult)

	if obj == nil {
		return emptyResult, err
	}
	return obj.(*v1.SubjectRulesReview), err
}
