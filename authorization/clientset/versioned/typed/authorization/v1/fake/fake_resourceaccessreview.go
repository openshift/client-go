// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1 "github.com/openshift/api/authorization/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	testing "k8s.io/client-go/testing"
)

// FakeResourceAccessReviews implements ResourceAccessReviewInterface
type FakeResourceAccessReviews struct {
	Fake *FakeAuthorizationV1
}

var resourceaccessreviewsResource = v1.SchemeGroupVersion.WithResource("resourceaccessreviews")

var resourceaccessreviewsKind = v1.SchemeGroupVersion.WithKind("ResourceAccessReview")

// Create takes the representation of a resourceAccessReview and creates it.  Returns the server's representation of the resourceAccessReviewResponse, and an error, if there is any.
func (c *FakeResourceAccessReviews) Create(ctx context.Context, resourceAccessReview *v1.ResourceAccessReview, opts metav1.CreateOptions) (result *v1.ResourceAccessReviewResponse, err error) {
	emptyResult := &v1.ResourceAccessReviewResponse{}
	obj, err := c.Fake.
		Invokes(testing.NewRootCreateActionWithOptions(resourceaccessreviewsResource, resourceAccessReview, opts), emptyResult)
	if obj == nil {
		return emptyResult, err
	}
	return obj.(*v1.ResourceAccessReviewResponse), err
}
